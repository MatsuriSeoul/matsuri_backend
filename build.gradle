plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'side'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'jakarta.servlet:jakarta.servlet-api:4.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'jakarta.servlet:jakarta.servlet-api:4.0.4'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.3'
	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// 전화번호 인증 API
	implementation 'com.twilio.sdk:twilio:8.32.0'

	// jBCrypt 라이브러리
	implementation 'org.mindrot:jbcrypt:0.4'

	// Apache POI 라이브러리
	implementation 'org.apache.poi:poi-ooxml:5.2.3'
}

tasks.named('test') {
	useJUnitPlatform()
}
def frontendDir = "$projectDir/frontend"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"] }
	}
}

processResources { dependsOn "copyReactBuildFiles" }


def npmPath = "/usr/local/bin/npm"

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	commandLine npmPath, "install"
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	commandLine npmPath, "run-script", "build"
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}

task watchReact(type: Exec) {
	workingDir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	commandLine npmPath, "run", "watch"
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}